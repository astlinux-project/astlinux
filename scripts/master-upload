#!/bin/bash
#
# master-upload input_path
#

input_path="$1"

auth_file="$HOME/.s3cfg"

success_count=0

upload_file()
{
  local remote_dir="$1" files="$2" count="$3" IFS=' ' file

  for file in $files; do
    s3cmd put --acl-public "$file" "s3://mirror.astlinux-project/$remote_dir/${file##*/}"
  done

  if [ $? -eq 0 ]; then
    if [ "$count" = "count" ]; then
      success_count=$((success_count+1))
    fi
  else
    echo "master-upload: failed."
    exit 1
  fi
}

upload_run_images()
{
  local local_dir="$1" firmware_path="$2" ver="/tmp/ver"

  for board in $(ls -1 "$local_dir"); do
    echo "Run Image for Board: $board"
    file="$(ls -1 "$local_dir/$board/"*.tar.gz | head -n1)"
    file_sha1="$(ls -1 "$local_dir/$board/"*.tar.gz.sha1 | head -n1)"
    if [ -n "$file" -a -n "$file_sha1" ]; then
      upload_file "$firmware_path/$board" "$file $file_sha1" count
    else
      echo "master-upload: missing file(s) in \"$local_dir/$board/\""
      exit 1
    fi

    # Successful upload, update the 'ver' file
    file_ver="$(basename "$file" .tar.gz)"
    echo "$file_ver" > "$ver"
    upload_file "$firmware_path/$board" "$ver"
    rm -f "$ver"
    echo ""
  done
}

upload_flash_images()
{
  local local_dir="$1" firmware_path="$2"

  for astver_board in $(ls -1 "$local_dir"); do
    for file in $(ls -1 "$local_dir/$astver_board/"*.img.gz); do
      echo "Flash Image: ${file##*/}"
      upload_file "$firmware_path/$astver_board" "$file" count
      echo ""
    done
  done
}

upload_iso_images()
{
  local local_dir="$1" firmware_path="$2" sha256="/tmp/sha256"

  for file in $(ls -1 "$local_dir/"*.iso); do
    echo "ISO Image: ${file##*/}"
    upload_file "$firmware_path" "$file" count
    echo ""
  done

  # Successful upload, update the 'sha256' file
  (
    cd "$local_dir/"
    sha256sum *.iso > "$sha256"
  )
  upload_file "$firmware_path" "$sha256"
  rm -f "$sha256"
  echo ""
}

set_asterisk_version()
{
  case $1 in
    ast13se)
      FIRMWARE="ast13se-firmware-1.x"
      MIRROR_FIRMWARE="$FIRMWARE"
      ;;
    ast16)
      FIRMWARE="ast16-firmware-1.x"
      MIRROR_FIRMWARE="$FIRMWARE"
      ;;
    ast18)
      FIRMWARE="ast18-firmware-1.x"
      MIRROR_FIRMWARE="$FIRMWARE"
      ;;
    *)
      echo "master-upload: Unknown Asterisk Version."
      exit 1
      ;;
  esac
}

if [ -z "$input_path" ]; then
  echo "Usage: master-upload input_path"
  exit 1
fi

if [ ! -d "$input_path" ]; then
  echo "master-upload: directory \"$input_path\" not found."
  exit 1
else
  check_iso=0
  check_img=0
  check_firmware=0
  for dir in $(ls -1 "$input_path"); do
    case $dir in
      iso) check_iso=1 ;;
      img) check_img=1 ;;
      *firmware-1.x) check_firmware=1 ;;
    esac
  done
  if [ $check_iso -eq 0 -o $check_img -eq 0 -o $check_firmware -eq 0 ]; then
    echo "master-upload: missing iso/img/firmware-1.x directories."
    exit 1
  fi
fi

if [ ! -f "$auth_file" ]; then
  echo "master-upload: authentication file \"$auth_file\" not found."
  exit 1
fi


for asterisk in ast13se ast16 ast18; do

  set_asterisk_version $asterisk

  # Upload .tar.gz run images
  upload_run_images "$input_path/$FIRMWARE" "$MIRROR_FIRMWARE"

done

# Upload .img.gz flash images
#upload_flash_images "$input_path/img" "downloads/img"

# Upload .iso installer images
upload_iso_images "$input_path/iso" "downloads/iso"


echo "
##
## Master Upload Finished for '$success_count' Images
##
"

