#!/usr/bin/php -qC
<?php
if (! isset($argv)) {
  $argv = $_SERVER['argv'];
}

// Function: LDAP_Client
//
function LDAP_Client($start_tls, &$uri, &$base) {

  if (! function_exists('ldap_connect')) {
    return(FALSE);
  }

  // begin - Custom variables
  $user = '';
  $pass = '';
  $proto_version = 3;
  $ms_ad = FALSE;       // Set to TRUE for Active Directory server
  // end

  $uri = '';
  $base = '';
  if (is_file($ldap_conf = '/etc/openldap/ldap.conf')) {
    if (($lines = @file($ldap_conf, FILE_IGNORE_NEW_LINES)) !== FALSE) {
      if (($grep = current(preg_grep('/^URI\s/', $lines))) !== FALSE) {
        $uri = trim(substr($grep, 4));
      }
      if (($grep = current(preg_grep('/^BASE\s/', $lines))) !== FALSE) {
        $base = trim(substr($grep, 5));
      }
    }
  }
  if ($uri === '') {
    return(FALSE);
  }

  if (($client = ldap_connect($uri)) !== FALSE) {
    if ($proto_version > 0) {
      ldap_set_option($client, LDAP_OPT_PROTOCOL_VERSION, $proto_version);
    }
    if ($ms_ad) {
      ldap_set_option($client, LDAP_OPT_REFERRALS, 0);
    }
    if ($start_tls && strncmp($uri, 'ldaps://', 8)) {  // Don't use together with ldaps://
      if (! ldap_start_tls($client)) {
        ldap_close($client);
        return(FALSE);
      }
    }
    if ($user !== '' && $pass !== '') {
      $ok_bind = ldap_bind($client, $user, $pass);
    } else {
      $ok_bind = ldap_bind($client);
    }
    if (! $ok_bind) {
      ldap_close($client);
      return(FALSE);
    }
  }
  return($client);
}

// Function: shift_argv
//
function shift_argv($opt, $options, $options_long, &$argv) {

  foreach ($opt as $o => $a) {
    foreach ($argv as $k => $aa) {
      if (substr($aa, 0, 2) === '-'.$o) {
        unset($argv[$k]);
        if (strpos($options, $o.':') !== FALSE) {
          if ($argv[$k + 1] === $a) {
            unset($argv[$k + 1]);
          }
        }
      } elseif (!is_null($options_long) && $aa === '--'.$o) {
        unset($argv[$k]);
        if (in_array($o.':', $options_long)) {
          if ($argv[$k + 1] === $a) {
            unset($argv[$k + 1]);
          }
        }
      }
    }
  }
  $argv = array_merge($argv);
}

// Function: getopt_argv
//
function getopt_argv($options, $options_long, &$argv) {

  if (is_null($options_long)) {
    $opt = getopt($options);
  } else {
    $opt = getopt($options, $options_long);
  }
  if ($opt !== FALSE) {
    shift_argv($opt, $options, $options_long, $argv);
    if ($argv[1][0] === '-') {
      echo "Invalid option: ".$argv[1]."\n";
      return(FALSE);
    }
  }
  return($opt);
}

$rtn = 1;
$tls = FALSE;    // Set to TRUE to not require --tls option, and default to TLS

$usage = "
Usage: ldap-phone-name-lookup [-ht] [--tls] [-m|--match-name list] [-o|--output-num list] name

Options:
    -h, --help             Show help
    -t, --tls              Enable TLS using start_tls
    -m, --match-name list  Comma separated list to match name. Default: cn,displayname
    -o, --output-num list  Comma separated list to display numbers. Default: telephonenumber,mobile,cellphone,homephone
    -d, --debug            Debug, show warnings

";

$options = 'htm:o:d';
$options_long = array('help', 'tls', 'match-name:', 'output-num:', 'debug');
if (($opt = getopt_argv($options, $options_long, $argv)) === FALSE) {
  echo "$usage";
  exit($rtn);
}
if (isset($opt['h']) || isset($opt['help']) || $argv[1] == '') {
  echo "$usage";
  exit($rtn);
}

$name = $argv[1];

if (isset($opt['d']) || isset($opt['debug'])) {
  error_reporting(E_STRICT | E_ALL);
} else {
  error_reporting(0);
}

if (isset($opt['t']) || isset($opt['tls'])) {
  $tls = TRUE;
}
if (isset($opt['m']) && $opt['m'] !== '') {
  $match_name = explode(',', $opt['m']);
} elseif (isset($opt['match-name']) && $opt['match-name'] !== '') {
  $match_name = explode(',', $opt['match-name']);
} else {
  $match_name = array('cn', 'displayname');
}
if (isset($opt['o'])) {
  $output_num = explode(',', $opt['o']);
} elseif (isset($opt['output-num'])) {
  $output_num = explode(',', $opt['output-num']);
} else {
  $output_num = array('telephonenumber', 'mobile', 'cellphone', 'homephone');
}

if (($ldapconn = LDAP_Client($tls, $uri, $dn)) !== FALSE) {

  $filter = '(|';
  foreach ($match_name as $mn) {
    $filter .= "($mn=$name)";
  }
  $filter .= ')';
  $justthese = array('cn', 'sn', 'givenname', 'displayname', 'o', 'telephonenumber', 'mobile', 'cellphone', 'homephone');

  if (($sr = ldap_search($ldapconn, $dn, $filter, $justthese)) !== FALSE) {
    $info = ldap_get_entries($ldapconn, $sr);

    if (($n = $info['count']) > 0) {
      $numbers = '';
      for ($i = 0; $i < $n; $i++) {
        foreach ($output_num as $on) {
          if (($number = $info[$i]["$on"][0]) != '') {
            $numbers .= ($numbers != '' ? '~' : '').$number;
          }
        }
      }
      if ($numbers != '') {
        echo $numbers, "\n";
        $rtn = 0;
      }
    } else {
      // No Matches
      $rtn = 4;
    }
  } else {
    // LDAP Search Failed
    $rtn = 3;
  }
  ldap_close($ldapconn);
} else {
  // LDAP Connection Failed
  $rtn = 2;
}

exit($rtn);
?>
