#!/bin/sh

. /etc/rc.conf

PIDFILE="/var/run/chrony/chronyd.pid"

DATA_DIR="/var/lib/ntp"

gen_chrony_config()
{
  local x IFS

  echo "# Autogenerated.  Do not edit.

driftfile $DATA_DIR/chrony.drift

allow
makestep 1.0 3
cmdport 0
rtconutc
rtcsync"

  if [ -n "$NTPSERVS" ]; then
    echo "
# NTP Servers/Pools"
    unset IFS
    for x in $NTPSERVS; do
      if echo "$x" | grep -q '^[a-zA-Z].*\.pool\.'; then
        echo "pool $x iburst"
      else
        echo "server $x iburst"
      fi
    done
  fi

  if [ "$NTPBROADCAST" = "yes" ]; then
    echo "
# Broadcast using IPv4 Multicast address
broadcast 50 224.0.1.1"
  fi

  echo "
# Undisciplined Local Clock
# When no outside source of synchronized time is available
local stratum 5"
}

init () {

  if [ ! -d $DATA_DIR ]; then
    mkdir -m 0700 -p $DATA_DIR
    chown ntp:ntp $DATA_DIR
  fi

  if [ -f /mnt/kd/chrony.conf ]; then
    ln -sf /mnt/kd/chrony.conf /tmp/etc/chrony.conf
  else
    if [ -L /tmp/etc/chrony.conf ]; then
      rm -f /tmp/etc/chrony.conf
    fi
    gen_chrony_config > /tmp/etc/chrony.conf
  fi
}

start () {
  local first

  if [ -f /etc/chrony.conf ]; then

    # Set the clock (large change)
    first="$(awk '/^server / { print $2; nextfile; }' /etc/chrony.conf)"
    if [ -z "$first" ]; then
      first="$(awk '/^pool / { print $2; nextfile; }' /etc/chrony.conf)"
    fi
    if [ -n "$first" ]; then
      echo "Setting local system time using '$first'..."
      if chronyd -q -t 8 "server $first maxsamples 1 iburst"; then
        if [ -r /dev/rtc0 ]; then
          hwclock -wu --noadjfile --rtc /dev/rtc0 2>/dev/null
        fi
      else
        logger -s -t chronyd -p kern.info "Failed to set time using NTP server '$first', continuing in the background."
      fi
      sleep 1
    fi

    # Maintain the clock (small changes)
    echo "Starting NTP Daemon (chronyd)..."
    chronyd
  fi
}

stop () {

  if [ -f $PIDFILE ]; then

    echo "Stopping NTP Daemon (chronyd)..."
    kill $(cat $PIDFILE) >/dev/null 2>&1
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

