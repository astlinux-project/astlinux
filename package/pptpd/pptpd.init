#!/bin/sh

# PPTP VPN Server Daemon (pptpd)

. /etc/rc.conf

. /etc/init.d/functions.d/misc

pid="/var/run/pptpd.pid"

config_file="/tmp/etc/pptpd.conf"

option_file="/tmp/etc/ppp/options.pptpd"

secret_file="/tmp/etc/ppp/chap-secrets"

remove_pptpd_secret()
{
  if [ -f "$1" ]; then
    sed -i '/^[^ ]* pptpd / d' "$1"
  fi
}

init () {
  local user pass dns1 dns2 wins1 wins2 connections localip remoteip IFS
  local bad_config=0

  if ! SYS_is_vpn_type pptp; then
    if [ -f /etc/pptpd.conf ]; then
      rm -f "$config_file"
    fi
    return
  fi

  if [ ! -d /etc/ppp ]; then
    mkdir /tmp/etc/ppp
  fi

  if [ ! -f "$secret_file" ]; then
    echo "# Secrets for authentication using CHAP" > "$secret_file"
  fi

  IFS=$'\n'
  for i in $PPTP_USER_PASS; do
    user="$(echo "$i" | awk -F' ' '{ print $1; }')"
    pass="$(echo "$i" | awk -F' ' '{ print $2; }')"
    if [ -n "$user" -a -n "$pass" ]; then
      echo "${user} pptpd ${pass} *" >> "$secret_file"
    fi
  done
  unset IFS
  chmod 600 "$secret_file"

  echo "# Autogenerated.  Do not edit." > "$option_file"

  # 1=low (no debug), 2=medium (pptpd.conf debug)
  # 3=high (both pptpd.conf and options.pptpd debug)
  if [ "$PPTP_VERBOSITY" = "3" ]; then
    echo "debug" >> "$option_file"
  fi

  dns1="$(echo "$PPTP_DNS" | awk -F' ' '{ print $1; }')"
  dns2="$(echo "$PPTP_DNS" | awk -F' ' '{ print $2; }')"
  wins1="$(echo "$PPTP_WINS" | awk -F' ' '{ print $1; }')"
  wins2="$(echo "$PPTP_WINS" | awk -F' ' '{ print $2; }')"

  echo "
name pptpd
refuse-pap
refuse-chap
refuse-mschap
require-mschap-v2
require-mppe-128
proxyarp
lock
nobsdcomp
novj
novjccomp
nologfd${dns1:+
ms-dns $dns1}${dns2:+
ms-dns $dns2}${wins1:+
ms-wins $wins1}${wins2:+
ms-wins $wins2}
" >> "$option_file"

  echo "# Autogenerated.  Do not edit." > "$config_file"

  # 1=low (no debug), 2=medium (pptpd.conf debug)
  # 3=high (both pptpd.conf and options.pptpd debug)
  if [ "$PPTP_VERBOSITY" = "2" -o "$PPTP_VERBOSITY" = "3" ]; then
    echo "debug" >> "$config_file"
  fi

  connections="$(echo "$PPTP_POOL" | awk -F' ' '{ print $1; }')"
  remoteip="$(echo "$PPTP_POOL" | awk -F' ' '{ print $2; }')"
  localip="$(echo "$PPTP_POOL" | awk -F' ' '{ print $3; }')"

  if [ -n "$connections" -a -n "$localip" -a -n "$remoteip" ]; then
    echo "
option /etc/ppp/options.pptpd
connections ${connections}
localip ${localip}
remoteip ${remoteip}
" >> "$config_file"
  else
    echo "pptpd: undefined variable PPTP_POOL" >&2
    bad_config=1
  fi

  if [ -z "$PPTP_SUBNET" ]; then
    echo "pptpd: undefined variable PPTP_SUBNET" >&2
    bad_config=1
  fi

  if [ $bad_config -ne 0 ]; then
    rm -f "$config_file" "$option_file"
    remove_pptpd_secret "$secret_file"
    exit 1
  fi
}

start () {
  if [ -f "$config_file" ]; then
    echo "Starting pptpd..."
    pptpd
  fi
}

stop () {
  if [ -f "$pid" ]; then
    echo "Stopping pptpd..."
    kill $(cat "$pid") >/dev/null 2>&1
    rm -f "$pid"
  fi
  rm -f "$config_file" "$option_file"
  remove_pptpd_secret "$secret_file"
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  init
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

