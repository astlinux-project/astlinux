#!/bin/sh

. /etc/rc.conf

PIDFILE="/var/run/vnstat/vnstat.pid"

DB_DIR="/mnt/kd/vnstat"

gen_vnstat_conf()
{

  if [ "$EXTIF" = "ppp0" -a -n "$PPPOEIF" ]; then
    echo "Interface \"$PPPOEIF\""
  else
    echo "Interface \"$EXTIF\""
  fi
  echo "DatabaseDir \"$DB_DIR\""
  echo "UnitMode 2"
}

init () {

  if [ "$VNSTAT_ENABLE" != "yes" ]; then
    exit
  fi

  if [ ! -d $DB_DIR ]; then
    mkdir $DB_DIR 2>/dev/null     # will fail on virgin RO filesystem, ignore stderr
  fi

  if [ -d $DB_DIR ]; then
    if [ -f /mnt/kd/vnstat/vnstat.conf ]; then
      echo "## Autogenerated.  Edit /mnt/kd/vnstat/vnstat.conf file.
" >/tmp/etc/vnstat.conf
      cat /mnt/kd/vnstat/vnstat.conf >>/tmp/etc/vnstat.conf
    else
      echo "## Autogenerated.  Do not edit.
## A manually generated /etc/vnstat.conf config will use /mnt/kd/vnstat/vnstat.conf if it exists.
" >/tmp/etc/vnstat.conf
      gen_vnstat_conf >>/tmp/etc/vnstat.conf
    fi
  fi
}

start () {
  local ARGS x interfaces IFS

  if [ "$VNSTAT_ENABLE" = "yes" -a -f /etc/vnstat.conf ]; then
    echo "Starting vnstat..."

    ARGS="--config /etc/vnstat.conf -u nobody -g nobody"

    ## Create initial DB if needed
    if ! vnstatd $ARGS --initdb; then
      logger -s -t vnstat -p kern.info "Database error using '$DB_DIR/vnstat.db', failed to start."
      exit 1
    fi

    if [ "$EXTIF" = "ppp0" -a -n "$PPPOEIF" ]; then
      interfaces="PPPoE~$PPPOEIF"
    else
      interfaces="External~$EXTIF"
    fi
    if [ "$EXT2IF" = "ppp0" -a -n "$PPPOEIF" ]; then
      interfaces="$interfaces PPPoE~$PPPOEIF"
    elif [ -n "$EXT2IF" ]; then
      interfaces="$interfaces Failover~$EXT2IF"
    fi

    unset IFS
    for x in $interfaces; do
      vnstat --config /etc/vnstat.conf --setalias ${x%~*} --add -i ${x##*~} >/dev/null
    done

    vnstatd $ARGS -d -p $PIDFILE --noadd
  fi
}

stop () {

  if [ -f $PIDFILE ]; then
    echo "Stopping vnstat..."

    kill $(cat $PIDFILE) >/dev/null 2>&1

    # Wait for vnstatd  to stop
    cnt=5
    while [ $cnt -gt 0 ] && [ -f $PIDFILE ]; do
      cnt=$((cnt - 1))
      sleep 1
    done
    rm -f $PIDFILE
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

