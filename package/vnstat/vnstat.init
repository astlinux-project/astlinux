#!/bin/sh

. /etc/rc.conf

PIDFILE="/var/run/vnstat/vnstat.pid"

gen_vnstat_conf()
{

  if [ "$EXTIF" = "ppp0" -a -n "$PPPOEIF" ]; then
    echo "Interface \"$PPPOEIF\""
  else
    echo "Interface \"$EXTIF\""
  fi
  echo "DatabaseDir \"/mnt/kd/vnstat\""
}

init () {

  if [ "$VNSTAT_ENABLE" != "yes" ]; then
    if [ -f /tmp/etc/vnstat.conf ]; then
      rm /tmp/etc/vnstat.conf
    fi
    exit
  fi

  if [ ! -d /mnt/kd/vnstat ]; then
    mkdir /mnt/kd/vnstat
  fi

  if [ -f /mnt/kd/vnstat/vnstat.conf ]; then
    echo "## Autogenerated.  Edit /mnt/kd/vnstat/vnstat.conf file.
" >/tmp/etc/vnstat.conf
    cat /mnt/kd/vnstat/vnstat.conf >>/tmp/etc/vnstat.conf
  else
    echo "## Autogenerated.  Do not edit.
## A manually generated /etc/vnstat.conf config will use /mnt/kd/vnstat/vnstat.conf if it exists.
" >/tmp/etc/vnstat.conf
    gen_vnstat_conf >>/tmp/etc/vnstat.conf
  fi
}

start () {
  local ARGS x interfaces IFS

  if [ -f /etc/vnstat.conf ]; then
    echo "Starting vnstat..."

    ARGS="-d -p $PIDFILE --config /etc/vnstat.conf --noadd -u nobody -g nobody"

    ## Create initial DB if needed
    if [ ! -f /mnt/kd/vnstat/vnstat.db ]; then
      if vnstatd $ARGS >/dev/null 2>&1; then
        ## This should never occur since --noadd with no DB should always fail
        sleep 2
        if [ -f $PIDFILE ]; then
          kill $(cat $PIDFILE) >/dev/null 2>&1
        fi
        sleep 2
        ##
      fi
    fi

    if [ "$EXTIF" = "ppp0" -a -n "$PPPOEIF" ]; then
      interfaces="$PPPOEIF"
    else
      interfaces="$EXTIF"
    fi
    if [ "$EXT2IF" = "ppp0" -a -n "$PPPOEIF" ]; then
      interfaces="$interfaces $PPPOEIF"
    elif [ -n "$EXT2IF" ]; then
      interfaces="$interfaces $EXT2IF"
    fi

    unset IFS
    for x in $interfaces; do
      vnstat --add -i $x >/dev/null
    done

    vnstatd $ARGS
  fi
}

stop () {

  if [ -f $PIDFILE ]; then
    echo "Stopping vnstat..."

    kill $(cat $PIDFILE) >/dev/null 2>&1

    # Wait for vnstatd  to stop
    cnt=5
    while [ $cnt -gt 0 ] && [ -f $PIDFILE ]; do
      cnt=$((cnt - 1))
      sleep 1
    done
    rm -f $PIDFILE
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

