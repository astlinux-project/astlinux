#!/bin/sh

. /etc/rc.conf

PIDFILE="/var/run/unbound/unbound.pid"

unbound_log()
{
  local action="$1" result="$2" unbound_info addr addrs IFS

  if [ "$action" = "start" ]; then
    unbound_info="unbound, DNS-TLS Proxy"
    if [ $result -eq 0 ]; then
      addrs=""
      unset IFS
      for addr in $(sed -n -r -e 's/^ *forward-addr: *([0-9a-fA-F:.]+)@.*$/\1/p' /etc/unbound/unbound.conf); do
        addrs="$addrs $addr"
      done
      logger -t unbound -p kern.info "Starting $unbound_info"
      logger -t unbound -p kern.info "Proxying upstream to:$addrs"
    else
      logger -t unbound -p kern.info "Failed starting $unbound_info"
    fi
  elif [ "$action" = "stop" ]; then
    unbound_info="unbound, DNS-TLS Proxy"
    logger -t unbound -p kern.info "Stopping $unbound_info"
  fi
}

gen_unbound_conf()
{
  local do_ip6 x addr name port IFS

  if [ "$IPV6" = "yes" ]; then
    do_ip6="yes"
  else
    do_ip6="no"
  fi

  if [ -f /mnt/kd/unbound/unbound.conf ]; then
    echo "# Autogenerated.  Edit /mnt/kd/unbound/unbound.conf file.
#"
    cat /mnt/kd/unbound/unbound.conf
  else
    echo "# Autogenerated.  Do not edit.
# A manually generated unbound config will use /mnt/kd/unbound/unbound.conf if it exists.

server:
module-config: \"iterator\"
username: nobody
num-threads: 1
port: 2853
interface: 127.0.0.1
do-udp: yes
do-tcp: yes
do-ip4: yes
do-ip6: ${do_ip6}
prefer-ip6: no
cache-max-ttl: 14400
minimal-responses: yes
qname-minimisation: yes
rrset-roundrobin: yes
use-caps-for-id: no
tls-cert-bundle: \"/usr/lib/ssl/certs/ca-bundle.crt\"
verbosity: 1
"
    if [ "$DNS_TLS_PRIVATE" != "yes" ]; then
      echo "# Block DNS containing RFC1918 addresses
private-address: 10.0.0.0/8
private-address: ::ffff:a00:0/104
private-address: 172.16.0.0/12
private-address: ::ffff:ac10:0/108
private-address: 169.254.0.0/16
private-address: ::ffff:a9fe:0/112
private-address: 192.168.0.0/16
private-address: ::ffff:c0a8:0/112
private-address: fd00::/8
private-address: fe80::/10
"
    else
      echo "# Allow DNS containing RFC1918 addresses
"
    fi

    echo '# Forward all DNS queries'
    echo 'forward-zone:'
    echo 'name: "."'

    # Default to Quad9 TLS for IPv4
    unset IFS
    for x in ${DNS_TLS_SERVERS:-9.9.9.9~dns.quad9.net 149.112.112.112~dns.quad9.net}; do
      addr="$(echo "$x" | cut -d'~' -f1)"
      name="$(echo "$x" | cut -s -d'~' -f2)"
      port="$(echo "$x" | cut -s -d'~' -f3)"
      if [ -z "$name" ]; then
        logger -s -t unbound -p kern.info "invalid DNS_TLS_SERVERS variable, entry missing tls_auth_name, failed to start."
        return 1
      fi
      echo "forward-addr: ${addr}@${port:-853}#${name}"
    done
    echo "forward-tls-upstream: yes"
  fi

  return 0
}

init () {

  if [ "$DNS_TLS_PROXY" != "yes" ]; then
    if [ -f /tmp/etc/unbound/unbound.conf ]; then
      rm /tmp/etc/unbound/unbound.conf
    fi
    exit 0
  fi

  if [ ! -d /tmp/etc/unbound ]; then
    mkdir -p /tmp/etc/unbound
  fi

  gen_unbound_conf > /tmp/etc/unbound/unbound.conf
  if [ $? -ne 0 ]; then
    rm -f /tmp/etc/unbound/unbound.conf
    exit 1
  fi

  mkdir -p /var/run/unbound
}

start () {

  if [ -f /etc/unbound/unbound.conf ]; then
    echo "Starting DNS-TLS Proxy (unbound)..."

    ARGS=""

    unbound
    unbound_log start $?
  fi
}

stop () {

  if [ -f $PIDFILE ]; then
    echo "Stopping DNS-TLS Proxy (unbound)..."

    kill $(cat $PIDFILE)
    unbound_log stop $?
    rm -f $PIDFILE
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

