#!/bin/sh

. /etc/rc.conf

PIDFILE="/var/run/prosody/prosody.pid"

DEFAULT_MODULES="roster saslauth tls disco \
private vcard \
legacyauth version uptime time ping pep register adhoc \
admin_adhoc admin_telnet log_auth"

DEFAULT_MODULES_S2S="dialback"

mod_in_list()
{
  local match="$1" list="$2" IFS

  unset IFS
  for i in $list; do
    if [ "$match" = "$i" ]; then
      return 0
    fi
  done

  return 1
}

gen_xmpp_config()
{
  local m vh MODS ADD_MODS="" modules="" admins="" hostname cert key log syslog error c2s_port s2s_port
  local LOG_OK SYSLOG_OK ERROR_LOG GROUPS_OK IFS c2s_idle_timeout disable_core_mods="" no_s2s=""

  cert="${XMPP_CERT:-/etc/prosody/certs/server.crt}"
  key="${XMPP_KEY:-/etc/prosody/certs/server.key}"
  if [ ! -f "$cert" ] || [ ! -f "$key" ]; then
    return 1
  fi
  if [ "$(stat -c '%U:%G' "$cert")" != "prosody:prosody" -o "$(stat -c '%U:%G' "$key")" != "prosody:prosody" ]; then
    return 1
  fi

  if [ "$XMPP_ENABLE_S2S" = "yes" ]; then
    MODS="$DEFAULT_MODULES $DEFAULT_MODULES_S2S"
    s2s_port="${XMPP_S2S_PORT:-5269}"
  else
    MODS="$DEFAULT_MODULES"
    no_s2s="s2s"
    s2s_port=""
  fi

  if [ "$XMPP_GROUPS" = "yes" ]; then
    MODS="$MODS groups"
    GROUPS_OK=""
    touch /mnt/kd/prosody/sharedgroups.conf
    chown prosody:prosody /mnt/kd/prosody/sharedgroups.conf
  else
    GROUPS_OK="-- "
  fi

  if [ -n "$XMPP_C2S_IDLE_TIMEOUT" ]; then
    MODS="$MODS pinger"
    c2s_idle_timeout="$XMPP_C2S_IDLE_TIMEOUT"
  else
    c2s_idle_timeout=""
  fi

  unset IFS
  for m in $XMPP_ENABLE_MODULES; do
    if ! mod_in_list "$m" "$MODS"; then
      ADD_MODS="$ADD_MODS${ADD_MODS:+ }$m"
    fi
  done
  for m in $MODS $ADD_MODS; do
    if ! mod_in_list "$m" "$XMPP_DISABLE_MODULES"; then
      modules="$modules${modules:+, }\"$m\""
    fi
  done
  for m in $no_s2s; do
    disable_core_mods="$disable_core_mods${disable_core_mods:+, }\"$m\""
  done

  for m in $XMPP_ADMIN_USERS; do
    admins="$admins${admins:+, }\"$m\""
  done

  hostname="${XMPP_HOSTNAME:-$HOSTNAME.$DOMAIN}"

  c2s_port="${XMPP_C2S_PORT:-5222}"

  log="${XMPP_LOG:-none}"
  if [ "$log" = "warn" -o "$log" = "info" -o "$log" = "debug" ]; then
    LOG_OK=""
  else
    LOG_OK="-- "
    log="info"
  fi

  syslog="${XMPP_SYSLOG:-warn}"
  if [ "$syslog" = "error" -o "$syslog" = "warn" -o "$syslog" = "info" ]; then
    SYSLOG_OK=""
  else
    SYSLOG_OK="-- "
    syslog="warn"
  fi

  error="${XMPP_ERROR_LOG:-no}"
  if [ "$error" = "yes" -o "$error" = "error" ]; then
    ERROR_LOG=""
  else
    ERROR_LOG="-- "
  fi

  echo "
pidfile = \"${PIDFILE}\"

prosody_user = \"prosody\"
prosody_group = \"prosody\"

allow_registration = false

authentication = \"internal_plain\"

c2s_require_encryption = true${c2s_idle_timeout:+

c2s_idle_timeout = $c2s_idle_timeout}

c2s_ports = { $c2s_port }

s2s_ports = { $s2s_port }

${GROUPS_OK}groups_file = \"/mnt/kd/prosody/sharedgroups.conf\"

admins = { $admins }

log = {
${LOG_OK}  $log = \"/var/log/prosody/prosody.log\";
${SYSLOG_OK}  { levels = { min = \"$syslog\" }, to = \"syslog\" };
${ERROR_LOG}  error = \"/var/log/prosody/prosody.err\";
}

ssl = {
  options = { \"no_sslv2\", \"no_sslv3\", \"no_ticket\", \"no_compression\", \"cipher_server_preference\", \"single_dh_use\", \"single_ecdh_use\" };
  certificate = \"$cert\";
  key = \"$key\";
}

modules_enabled = { \"posix\", $modules }

modules_disabled = { $disable_core_mods }
"

  unset IFS
  for vh in $hostname; do
    echo "VirtualHost \"$vh\""
    echo ""
  done

  if [ -n "$XMPP_CONFERENCE" ]; then
    echo "Component \"$XMPP_CONFERENCE\" \"muc\""
    echo ""
  fi

  if [ -n "$XMPP_PUBSUB" ]; then
    echo "Component \"$XMPP_PUBSUB\" \"pubsub\""
    if [ -n "$XMPP_PUBSUB_ADMINS" ]; then
      admins=""
      for m in $XMPP_PUBSUB_ADMINS; do
        admins="$admins${admins:+, }\"$m\""
      done
      echo "  admins = { $admins }"
    fi
    if [ "$XMPP_PUBSUB_AUTOCREATE" = "yes" -o "$XMPP_PUBSUB_AUTOCREATE" = "subscribe" ]; then
      echo "  autocreate_on_subscribe = true"
    fi
    if [ "$XMPP_PUBSUB_AUTOCREATE" = "yes" -o "$XMPP_PUBSUB_AUTOCREATE" = "publish" ]; then
      echo "  autocreate_on_publish = true"
    fi
    echo ""
  fi

  return 0
}

init () {

  if [ "$XMPP_ENABLE" != "yes" ]; then
    if [ -f /mnt/kd/prosody/prosody.cfg.lua ]; then
      rm /mnt/kd/prosody/prosody.cfg.lua
    fi
    exit
  fi

  if [ ! -x /usr/bin/prosody ]; then
    echo "prosody: XMPP Server Prosody not installed."
    exit
  fi

  if [ ! -d /mnt/kd/prosody/data ]; then
    mkdir -p /mnt/kd/prosody/data
    mkdir -p /mnt/kd/prosody/certs
    find /mnt/kd/prosody -print0 | xargs -0 chown prosody:prosody
    chmod 750 /mnt/kd/prosody/data
  fi
  ln -snf /mnt/kd/prosody /tmp/etc/prosody
  chown prosody:prosody /tmp/etc/prosody

  # Use SIP TLS certs if they exist and ours don't exist
  if [ -f /mnt/kd/ssl/sip-tls/keys/server.crt ] && [ ! -f /mnt/kd/prosody/certs/server.crt ]; then
    cp -a /mnt/kd/ssl/sip-tls/keys/server.crt /mnt/kd/prosody/certs/server.crt
    chown prosody:prosody /mnt/kd/prosody/certs/server.crt
  fi
  if [ -f /mnt/kd/ssl/sip-tls/keys/server.key ] && [ ! -f /mnt/kd/prosody/certs/server.key ]; then
    cp -a /mnt/kd/ssl/sip-tls/keys/server.key /mnt/kd/prosody/certs/server.key
    chown prosody:prosody /mnt/kd/prosody/certs/server.key
  fi

  if [ -f /mnt/kd/prosody/prosody.conf ]; then
    echo "-- Autogenerated.  Edit /mnt/kd/prosody/prosody.conf file.
" >/mnt/kd/prosody/prosody.cfg.lua
    cat /mnt/kd/prosody/prosody.conf >>/mnt/kd/prosody/prosody.cfg.lua
  else
    # Autogenerate /mnt/kd/prosody/prosody.cfg.lua
    echo "-- Autogenerated.  Do not edit.
-- A manually generated prosody.cfg.lua config will use /mnt/kd/prosody/prosody.conf if it exists.
" >/mnt/kd/prosody/prosody.cfg.lua
    gen_xmpp_config >>/mnt/kd/prosody/prosody.cfg.lua
    if [ $? -ne 0 ]; then
      logger -s -t prosody -p kern.info "XMPP SSL configuration error, failed to start."
      logger -s -t prosody -p kern.info "Try generating an Asterisk SIP-TLS Server Certificate, which XMPP will use by default."
      rm /mnt/kd/prosody/prosody.cfg.lua
      return
    fi
  fi
  chown prosody:prosody /mnt/kd/prosody/prosody.cfg.lua

  mkdir -p /var/run/prosody
  chown prosody:prosody /var/run/prosody

  mkdir -p /var/log/prosody
  chown prosody:prosody /var/log/prosody
}

start () {

  if [ -f /etc/prosody/prosody.cfg.lua ] && grep -q '^[^-]*"posix"' /etc/prosody/prosody.cfg.lua; then
    echo "Starting XMPP Server..."

    start-stop-daemon -S -x /usr/bin/prosody -n lua -p $PIDFILE -u prosody --chuid prosody:prosody
  fi
}

stop () {

  if [ -f $PIDFILE ]; then
    echo "Stopping XMPP Server..."

    start-stop-daemon -K -q -n lua -p $PIDFILE -u prosody -s TERM

    # Wait for prosody to stop
    cnt=5
    while [ $cnt -gt 0 ] && [ -f $PIDFILE ]; do
      cnt=$((cnt - 1))
      sleep 1
    done
    rm -f $PIDFILE
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

