From ef1ad68131ff35445660bd0d36a04cf6f9ba6456 Mon Sep 17 00:00:00 2001
From: George Joseph <g.devel@wxy78.net>
Date: Mon, 19 May 2025 08:16:53 -0600
Subject: [PATCH] asterisk.c: Add option to restrict shell access from remote
 consoles.

UserNote: A new asterisk.conf option 'disable_remote_console_shell' has
been added that, when set, will prevent remote consoles from executing
shell commands using the '!' prefix.

Resolves: #GHSA-c7p6-7mvq-8jq2
---
 configs/samples/asterisk.conf.sample        | 3 +++
 configs/samples/cli_permissions.conf.sample | 5 +++++
 include/asterisk/options.h                  | 2 ++
 main/asterisk.c                             | 6 ++++++
 main/options.c                              | 5 ++++-
 5 files changed, 20 insertions(+), 1 deletion(-)

diff --git a/configs/samples/asterisk.conf.sample b/configs/samples/asterisk.conf.sample
index 6ab4e8fa76a..82c73e13a39 100644
--- a/configs/samples/asterisk.conf.sample
+++ b/configs/samples/asterisk.conf.sample
@@ -128,6 +128,9 @@ documentation_language = en_US	; Set the language you want documentation
                 ; housekeeping AMI and ARI channel events.  This can
                 ; reduce the load on the manager and ARI applications
                 ; when the Digium Phone Module for Asterisk is in use.
+;disable_remote_console_shell = no; Prevent remote console CLI sessions
+                ; from executing shell commands with the '!' prefix.
+                ; Default: no
 
 ; Changing the following lines may compromise your security.
 ;[files]
diff --git a/configs/samples/cli_permissions.conf.sample b/configs/samples/cli_permissions.conf.sample
index 9f69e1c9ab3..5000e489e91 100644
--- a/configs/samples/cli_permissions.conf.sample
+++ b/configs/samples/cli_permissions.conf.sample
@@ -19,6 +19,11 @@
 ; deny = <command name> | all		; disallow the user to run 'command' |
 ;					; disallow the user to run 'all' commands.
 ;
+; NOTE: This file can't be used to restict the use of the '!' prefix
+; for running shell commands from the CLI. You can however disable the
+; use of the shell commands in remote consoles altogether by setting
+; the 'disable_remote_console_shell' parameter in asterisk.conf to 'yes'.
+;
 
 [general]
 
diff --git a/include/asterisk/options.h b/include/asterisk/options.h
index 315788386dd..77175c9e522 100644
--- a/include/asterisk/options.h
+++ b/include/asterisk/options.h
@@ -207,6 +207,8 @@ extern int ast_language_is_prefix;
 extern int ast_option_rtpusedynamic;
 extern unsigned int ast_option_rtpptdynamic;
 
+extern int ast_option_disable_remote_console_shell;
+
 #if defined(__cplusplus) || defined(c_plusplus)
 }
 #endif
diff --git a/main/asterisk.c b/main/asterisk.c
index 0ee07362b80..583182c55ea 100644
--- a/main/asterisk.c
+++ b/main/asterisk.c
@@ -567,6 +567,8 @@ static char *handle_show_settings(struct ast_cli_entry *e, int cmd, struct ast_c
 		ast_cli(a->fd, "  RTP dynamic payload types:   %u-%u\n",
 		        AST_RTP_PT_FIRST_DYNAMIC, AST_RTP_MAX_PT - 1);
 	}
+	ast_cli(a->fd, "  Shell on remote consoles:    %s\n",
+		ast_option_disable_remote_console_shell ? "Disabled" : "Enabled");
 
 	ast_cli(a->fd, "\n* Subsystems\n");
 	ast_cli(a->fd, "  -------------\n");
@@ -2306,6 +2308,10 @@ static int remoteconsolehandler(const char *s)
 
 	/* The real handler for bang */
 	if (s[0] == '!') {
+		if (ast_option_disable_remote_console_shell) {
+			printf("Shell access is disabled on remote consoles\n");
+			return 1;
+		}
 		if (s[1])
 			ast_safe_system(s+1);
 		else
diff --git a/main/options.c b/main/options.c
index 6787d1b3cdf..8b673ad7383 100644
--- a/main/options.c
+++ b/main/options.c
@@ -87,7 +87,7 @@ long option_minmemfree;
 #endif
 int ast_option_rtpusedynamic = 1;
 unsigned int ast_option_rtpptdynamic = 35;
-
+int ast_option_disable_remote_console_shell = 0;
 /*! @} */
 
 struct ast_eid ast_eid_default;
@@ -223,6 +223,7 @@ void load_asterisk_conf(void)
 	int option_trace_new = 0;
 	int option_verbose_new = 0;
 
+
 	/* init with buildtime config */
 #ifdef REF_DEBUG
 	/* The REF_DEBUG compiler flag is now only used to enable refdebug by default.
@@ -479,6 +480,8 @@ void load_asterisk_conf(void)
 			live_dangerously = ast_true(v->value);
 		} else if (!strcasecmp(v->name, "hide_messaging_ami_events")) {
 			ast_set2_flag(&ast_options, ast_true(v->value), AST_OPT_FLAG_HIDE_MESSAGING_AMI_EVENTS);
+		} else if (!strcasecmp(v->name, "disable_remote_console_shell")) {
+			ast_option_disable_remote_console_shell = ast_true(v->value);
 		}
 	}
 	if (!ast_opt_remote) {
