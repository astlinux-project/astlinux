#!/bin/bash

## AstLinux PPPoE scripts
## Initial version, 2021-01-05
##

. /etc/rc.conf

. /etc/init.d/functions.d/network

PIDFILE="/var/run/pppoe.pid"

if ! isextppp; then
  echo "pppoe-start: PPPoE not enabled." >&2
  exit 1
fi

log() {
  local TYPE="$1" MESG="$2"

  TYPE="$(echo "$TYPE" | tr '[:upper:]' '[:lower:]')"

  logger -s -t pppoe-start -p "daemon.$TYPE" "$MESG"
}

gen_pppoe_options()
{
  local user="$1"

  echo "# Autogenerated.  Do not edit.
user $user
noipdefault
noauth
default-asyncmap
defaultroute
usepeerdns
mtu 1492
mru 1492
noaccomp
nodeflate
nopcomp
novj
novjccomp
lcp-echo-interval 20
lcp-echo-failure 3"

  if [ "$IPV6" != "yes" ]; then
    echo "noipv6"
  fi

  if [ "$PPPOEDEBUG" = "yes" ]; then
    echo "show-password"
    echo "debug"
  else
    echo "hide-password"
  fi

  if [ -n "$PPPOE_PPP_OPTIONS" ]; then
    echo "$PPPOE_PPP_OPTIONS"
  fi
}

LINUX_PLUGIN="$(find /usr/lib/pppd -name "pppoe.so")"
if [ -z "$LINUX_PLUGIN" ]; then
  log ERROR "The Linux PPPoE plugin is not found."
  exit 1
fi

modprobe pppoe

mkdir -p /tmp/etc/ppp/peers

gen_pppoe_options "$PPPOEUSER" > /tmp/etc/ppp/peers/pppoe-$PPPOEIF

## Generate pppoe.conf for backward compatibility, only existence used
echo "# Autogenerated.  Do not edit." > /tmp/etc/ppp/pppoe.conf

echo "$PPPOEUSER * $PPPOEPASS" > /tmp/etc/ppp/pap-secrets
echo "$PPPOEUSER * $PPPOEPASS" > /tmp/etc/ppp/chap-secrets
chmod 600 /tmp/etc/ppp/chap-secrets /tmp/etc/ppp/pap-secrets

if [ -f "$PIDFILE" ]; then
  /usr/sbin/pppoe-stop
  sleep 2
fi

## kill any remaining pppd/pppoe processes
for pid in $(pgrep -f '^pppd .*/pppoe.so '); do
  kill -9 $pid
  sleep 2
done

## Start pppd daemon
if ! pppd plugin $LINUX_PLUGIN nic-$PPPOEIF call pppoe-$PPPOEIF unit 0 persist maxfail 0 >/dev/null; then
  log ERROR "The pppd daemon failed to start."
  exit 1
fi
log INFO "PPPoE is starting..."

sleep 1

PID="$(pgrep -f '^pppd .*/pppoe.so ')"
if [ -z "$PID" ]; then
  log ERROR "The pppd daemon started, but no PID."
  exit 1
fi
echo "$PID" > "$PIDFILE"

## Monitor the connection until Link is up

cnt=30    # total seconds to monitor
delay=2   # seconds per monitor loop
while [ $cnt -gt 0 ]; do
  if ! kill -0 "$PID"; then
    log ERROR "The pppd daemon stopped, PPPoE failed."
    if [ -f "$PIDFILE" ]; then
      if [ "$(cat "$PIDFILE")" = "$PID" ]; then
        rm "$PIDFILE"
      fi
    fi
    exit 1
  fi

  addr="$(ip -o addr show ppp0 2>/dev/null | awk '$3 == "inet" { print $4; }')"
  if [ -n "$addr" ]; then
    log INFO "PPPoE Link is up using ppp0, IPv4: $addr"
    exit 0
  fi

  cnt=$((cnt - delay))
  sleep $delay
done

log ERROR "PPPoE Link is down, continuing in background."
exit 1

