From 70441d68c059924bda2d1437bd1d157ddcb2fb58 Mon Sep 17 00:00:00 2001
From: Stephan Mueller <smueller@chronox.de>
Date: Sun, 6 Dec 2020 10:29:31 +0100
Subject: [PATCH] prevent creating timer thread if high-res timer is detected

When enabling JENT_CONF_ENABLE_INTERNAL_TIMER during compile time, the
additional code should be completely dead during run time if a high-res
hardware timer is detected.

Unfortunately that was not the case as the timer thread was always
created even though not needed. The thread is now only created if no
high-res hardware timer is detected.

Reported-by: Lonnie Abelbeck
Signed-off-by: Stephan Mueller <smueller@chronox.de>
---
 CHANGES.md           |  5 ++++-
 jitterentropy-base.c | 11 +++++++++--
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/jitterentropy-base.c b/jitterentropy-base.c
index 58efe1a..037df6d 100644
--- a/jitterentropy-library/jitterentropy-base.c
+++ b/jitterentropy-library/jitterentropy-base.c
@@ -710,8 +710,12 @@ static void *jent_notime_sample_timer(void *arg)
  */
 static inline int jent_notime_settick(struct rand_data *ec)
 {
-	int ret = -pthread_attr_init(&ec->notime_pthread_attr);
+	int ret;
+
+	if (!ec->enable_notime)
+		return 0;
 
+	ret = -pthread_attr_init(&ec->notime_pthread_attr);
 	if (ret)
 		return ret;
 
@@ -726,6 +730,9 @@ static inline int jent_notime_settick(struct rand_data *ec)
 
 static inline void jent_notime_unsettick(struct rand_data *ec)
 {
+	if (!ec->enable_notime)
+		return;
+
 	ec->notime_interrupt = 1;
 	pthread_join(ec->notime_thread_id, NULL);
 	pthread_attr_destroy(&ec->notime_pthread_attr);
