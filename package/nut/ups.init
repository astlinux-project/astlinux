#!/bin/sh

. /etc/rc.conf

UPSD_PIDFILE="/var/run/ups/upsd.pid"

UPSMON_PIDFILE="/var/run/upsmon.pid"

LOGFILE="/var/log/ups.log"

gen_ups_conf()
{

  case $UPS_DRIVER in

    snmp-ups) echo "[ups]
driver = ${UPS_DRIVER}
port = ${UPS_DRIVER_PORT}
community = public
snmp_version = v2c
pollfreq = 15
"
    ;;

    netxml-ups) echo "[ups]
driver = ${UPS_DRIVER}
port = ${UPS_DRIVER_PORT}
"
    ;;

    *) echo "[ups]
driver = ${UPS_DRIVER}
port = ${UPS_DRIVER_PORT:-auto}
"
    ;;
  esac
}

gen_upsd_conf()
{
  local address port

  if [ "$UPS_LISTEN_ALL" = "yes" ]; then
    address="0.0.0.0"
  else
    address="127.0.0.1"
  fi

  port="${UPS_LISTEN_PORT:-3493}"

  echo "LISTEN ${address} ${port}"
  if [ "$IPV6" = "yes" ]; then
    echo "LISTEN ::1 ${port}"
  fi
}

gen_upsd_users()
{
  local master_pass="$1"

  if [ -n "$master_pass" ]; then
    echo "[master]
password = ${master_pass}
upsmon master
"
  fi

  echo "[${UPS_MONITOR_USER:-monuser}]
password = ${UPS_MONITOR_PASS:-astlinux}
upsmon slave
"
}

gen_upsmon_conf()
{
  local master_pass="$1" notify host user pass type pollfreq

  if [ -n "$UPS_MONITOR_HOST" -a -n "$UPS_MONITOR_USER" -a -n "$UPS_MONITOR_PASS" ]; then
    host="$UPS_MONITOR_HOST"
    user="$UPS_MONITOR_USER"
    pass="$UPS_MONITOR_PASS"
    type="slave"
    pollfreq=10
  elif [ -n "$master_pass" ]; then
    host="ups@localhost"
    user="master"
    pass="$master_pass"
    type="master"
    pollfreq=5
  else
    return
  fi

  if [ -f /mnt/kd/ups/upssched.conf ]; then
    notify="/usr/sbin/upssched"
  elif [ -x /mnt/kd/ups/upsnotify ]; then
    notify="/mnt/kd/ups/upsnotify"
  else
    notify="/stat/etc/ups/upsnotify"
  fi

  echo "RUN_AS_USER root
MONITOR ${host} 1 ${user} ${pass} ${type}
MINSUPPLIES 1
POLLFREQ ${pollfreq}
POLLFREQALERT 5
HOSTSYNC 15
DEADTIME $((pollfreq*3))
SHUTDOWNCMD /sbin/poweroff
POWERDOWNFLAG /etc/ups/killpower
NOTIFYCMD ${notify}
NOTIFYFLAG ONLINE SYSLOG+EXEC
NOTIFYFLAG ONBATT SYSLOG+EXEC
NOTIFYFLAG LOWBATT SYSLOG+EXEC
NOTIFYFLAG REPLBATT SYSLOG+EXEC
NOTIFYFLAG NOCOMM SYSLOG
NOTIFYFLAG FSD SYSLOG+EXEC
NOTIFYFLAG COMMOK SYSLOG+EXEC
NOTIFYFLAG COMMBAD SYSLOG+EXEC
NOTIFYFLAG SHUTDOWN IGNORE
NOTIFYFLAG NOPARENT SYSLOG
RBWARNTIME 43200
NOCOMMWARNTIME 300
FINALDELAY 5
"
}

gen_upssched_conf()
{
  echo "##########
## By default the upsmon NOTIFYCMD is set to the system /stat/etc/ups/upsnotify script.
## If a custom /mnt/kd/ups/upsnotify script exists and is executable, it will be used instead.
## Alternatively, if the /mnt/kd/ups/upssched.conf file exists then NOTIFYCMD will call upssched instead.
##########
"
}

init ()
{
  local i conf_f man_conf_f man_conf master_pass=""

  if [ -n "$UPS_DRIVER" -o -f /mnt/kd/ups/ups.conf ] || \
     [ -n "$UPS_MONITOR_HOST" -a -n "$UPS_MONITOR_USER" -a -n "$UPS_MONITOR_PASS" ] || \
     [ -f /mnt/kd/ups/upsmon.conf ]; then

    mkdir -p /var/state/ups
    chown nobody:nobody /var/state/ups
    chmod 750 /var/state/ups

    mkdir -p /var/run/ups
    chown nobody:nobody /var/run/ups

    mkdir -p /tmp/etc/ups

    for i in ups.conf upsd.conf upsd.users upsmon.conf upssched.conf; do
      conf_f="/tmp/etc/ups/$i"
      man_conf_f="/mnt/kd/ups/$i"
      if [ -f $man_conf_f ]; then
        man_conf=1
        echo "# Autogenerated.  Edit $man_conf_f file.
" > $conf_f
        cat $man_conf_f >> $conf_f
      else
        man_conf=0
        echo "# Autogenerated.  Do not edit.
# A manually generated ups config will use $man_conf_f if it exists.
" > $conf_f
      fi
      case $i in
        ups.conf)
          master_pass="$(openssl rand -base64 24)"
          if [ $man_conf -eq 0 ]; then
            if [ -n "$UPS_DRIVER" ]; then
              gen_ups_conf >> $conf_f
            else
              master_pass=""
            fi
          fi
          if [ -z "$master_pass" ]; then
            rm -f $conf_f
          else
            chmod 644 $conf_f
          fi
          ;;
        upsd.conf)
          if [ $man_conf -eq 0 ]; then
            gen_upsd_conf >> $conf_f
          fi
          chmod 640 $conf_f
          ;;
        upsd.users)
          if [ $man_conf -eq 0 ]; then
            gen_upsd_users "$master_pass" >> $conf_f
          else
            sed -i -e "s|@MASTER_PASS@|${master_pass}|" $conf_f
          fi
          chown root:nobody $conf_f
          chmod 640 $conf_f
          ;;
        upsmon.conf)
          if [ $man_conf -eq 0 ]; then
            gen_upsmon_conf "$master_pass" >> $conf_f
          else
            sed -i -e "s|@MASTER_PASS@|${master_pass}|" $conf_f
          fi
          chmod 640 $conf_f
          ;;
        upssched.conf)
          if [ $man_conf -eq 0 ]; then
            gen_upssched_conf >> $conf_f
          fi
          chmod 644 $conf_f
          ;;
      esac
    done
  elif [ -f /etc/ups/ups.conf -o -f /etc/ups/upsmon.conf ]; then
    rm -f /tmp/etc/ups/ups.conf /tmp/etc/ups/upsmon.conf
  fi
}

start ()
{

  if [ -f /etc/ups/ups.conf -o -f /etc/ups/upsmon.conf ]; then
    echo "$(date "+%Y-%m-%d %H:%M:%S") - started" > $LOGFILE
  fi

  if [ -f /etc/ups/ups.conf ]; then
    echo "Starting ups..."
    echo "Starting ups..." >> $LOGFILE

    upsdrvctl start >> $LOGFILE 2>&1
    upsd >> $LOGFILE 2>&1
  fi

  if [ -f /etc/ups/upsmon.conf ]; then
    echo "Starting upsmon..."
    echo "Starting upsmon..." >> $LOGFILE

    upsmon_ver="$(upsmon -V)"

    upsmon >> $LOGFILE 2>&1

    echo "$(date "+%Y-%m-%d %H:%M:%S") - $upsmon_ver started" >/var/log/ups-status.log
  fi
}

stop ()
{

  if [ -f $UPSMON_PIDFILE ]; then
    echo "Stopping upsmon..."
    echo "Stopping upsmon..." >> $LOGFILE
    upsmon -c stop >> $LOGFILE 2>&1
    rm -f $UPSMON_PIDFILE
  fi

  if [ -f $UPSD_PIDFILE ]; then
    echo "Stopping ups..."
    echo "Stopping ups..." >> $LOGFILE

    # See if this is a powerfail situation and we want to kill power
    if [ "$UPS_KILL_POWER" = "yes" -a -f /etc/ups/killpower ]; then
      echo "#################################################################"
      echo "#  Ordering UPS to kill power after a delay (~ 60 secs).        #"
      echo "#                                                               #"
      echo '#  Please ensure that the UPS has powered off before rebooting  #'
      echo '#  Otherwise, the UPS may cut the power during the reboot!!!    #'
      echo "#################################################################"
      # Wait so any network clients have an opportunity to poll while in powerfail mode
      cnt=15
      while [ $cnt -gt 0 ]; do
        cnt=$((cnt - 1))
        echo -n "."
        sleep 1
      done
    fi

    upsd -c stop >> $LOGFILE 2>&1
    upsdrvctl stop >> $LOGFILE 2>&1

    if [ "$UPS_KILL_POWER" = "yes" -a -f /etc/ups/killpower ]; then
      cnt=5
      while [ $cnt -gt 0 ]; do
        cnt=$((cnt - 1))
        echo -n "."
        sleep 1
      done
      if upsdrvctl shutdown >/dev/null 2>&1; then
        echo "UPS Ordered to Kill Power"
      else
        echo "Kill Power Failed"
      fi
    fi
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac
