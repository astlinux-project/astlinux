#!/bin/sh
# red color error message for web interface
RED=1
# orange color error message for web interface
ORANGE=2
# green color message for web interface
GREEN=0

gen_kd_files()
{
  # Args: dest_directory

  cp /stat/etc/rc.conf ${1}/
  cp -a /tmp/etc/asterisk ${1}/
  cp -a /var/spool/asterisk/voicemail ${1}/
  cp -a /tmp/tftpboot ${1}/

  mkdir ${1}/ssh
  cp -a /tmp/etc/ssh/ssh_host_* ${1}/ssh/

  mkdir ${1}/home
  mkdir ${1}/monitor
  mkdir ${1}/dictate

  mkdir ${1}/dahdi
  if [ -f /stat/etc/dahdi/system.conf ]; then
    cp -a /stat/etc/dahdi/system.conf ${1}/dahdi/
  else
    touch ${1}/dahdi/system.conf
  fi

  touch ${1}/webgui-prefs.txt

  if [ -f /var/db/dnsmasq.leases ]; then
    cp -a /var/db/dnsmasq.leases ${1}/
  else
    touch ${1}/dnsmasq.leases
  fi

  cp /stat/etc/dnsmasq.static ${1}/

  cp -a /var/log/asterisk/cdr-csv ${1}/

  if [ -d /stat/etc/wanpipe ]; then
    cp -a /stat/etc/wanpipe ${1}/
  fi

  cp -a /var/spool/cron/crontabs ${1}/

  if [ -f /var/db/astdb ]; then
    cp -a /var/db/astdb ${1}/
  else
    touch ${1}/astdb
  fi

  if [ -f /var/db/astdb.sqlite3 ]; then
    cp -a /var/db/astdb.sqlite3 ${1}/
  fi

  if [ -d /stat/etc/arno-iptables-firewall ]; then
    cp -a /stat/etc/arno-iptables-firewall ${1}/
  fi
}

find_runnix_drive() {

  # Find Runnix Drive
  DRIVE=""
  if [ -x /sbin/findfs ]; then
    DRIVE="$(/sbin/findfs LABEL=RUNNIX | awk '{ print substr($1,1,length($1)-1); }')"
  fi
  if [ -z "$DRIVE" ]; then
    DRIVE="$(mount | awk '/\/oldroot\/cdrom/ { print substr($1,1,length($1)-1); }')"
  fi
  case $DRIVE in
    /dev/nvme[0-9]n*) DRIVE="${DRIVE%p}" ;;
  esac
  if [ -z "$DRIVE" ]; then
    echo "Runnix Drive could not be found."
    exit $RED
  fi
}

is_configured() {

  # Is unionfs here?
  if mount | grep -q "/mnt/asturw"; then
    return 0
  fi

  return 1
}

genunion() {
  # Args: partition

  if mount | grep -q "$1"; then
    echo "Partition $1 is currently in use."
    exit $RED
  fi
  # Create filesystem, ext2 defaults plus ext4 'extra_isize' feature. Without journal.
  if ! mke2fs -q -O extra_isize -L ASTURW $1; then
    echo "Creating ASTURW filesystem on $1 failed."
    exit $RED
  fi

  return 0
}

genkd() {
  # Args: partition

  if mount | grep -q "$1"; then
    echo "Partition $1 is currently in use."
    exit $RED
  fi
  # Create filesystem, ext2 defaults plus ext4 'extra_isize' feature. Without journal.
  if ! mke2fs -q -O extra_isize -L ASTKD $1; then
    echo "Creating ASTKD filesystem on $1 failed."
    exit $RED
  fi

  if ! mount -t ext4 $1 /mnt/kd; then
    echo "Mounting ASTKD on $1 failed."
    exit $RED
  fi

  gen_kd_files /mnt/kd

  return 0
}

format_separate() {
  # Args: drive, unionfs_size
  local part_union
  local part_kd

  # Find Runix Drive
  find_runnix_drive

  # Number of partitions
  PNUM="$(/sbin/fdisk -l | grep "^$1" | wc -l)"

  if [ "$DRIVE" = "$1" ]; then
    part_union=2
    part_kd=3
  else
    echo "Drive $1 does not match RUNNIX drive: $DRIVE."
    exit $RED
  fi

  if [ $PNUM -ne 1 ]; then
    echo "Drive $1 currently has added partitions."
    exit $RED
  fi

  /sbin/fdisk "$1" <<EOF >/dev/null
n
p
${part_union}

+${2}M
n
p
${part_kd}


w
EOF
  # Ignore fdisk result, check for success
  PNUM="$(/sbin/fdisk -l | grep "^$1" | wc -l)"

  if [ $PNUM -ne 3 ]; then
    echo "Format of drive $1 failed, use fdisk manually."
    exit $RED
  fi
}

configure() {
  # Args: drive
  local part_union
  local part_kd

  # Find Runix Drive
  find_runnix_drive

  # Number of partitions
  PNUM="$(/sbin/fdisk -l | grep "^$1" | wc -l)"

  if [ "$DRIVE" = "$1" ]; then
    part_union=2
    part_kd=3
  else
    echo "Drive $1 does not match RUNNIX drive: $DRIVE."
    exit $RED
  fi

  case $PNUM in

  3)
    if is_configured; then
      echo "Drive $1 does not require configuration."
      exit $RED
    fi
    case $1 in
      /dev/nvme[0-9]n*)
        genunion "${1}p${part_union}"
        genkd "${1}p${part_kd}"
        ;;
      *)
        genunion "${1}${part_union}"
        genkd "${1}${part_kd}"
        ;;
    esac
    ;;

  *)
    echo "Partition status on $1 is unknown."
    exit $RED
    ;;

  esac
}

status() {

  # Find Runix Drive
  find_runnix_drive

  # Number of partitions
  PNUM="$(/sbin/fdisk -l | grep "^$DRIVE" | wc -l)"

  case $PNUM in

  1)
    echo "ok-format $DRIVE"
    ;;

  3)
    if is_configured; then
      echo "ok-unionfs $DRIVE"
    else
      echo "ok-configure $DRIVE"
    fi
    ;;

  *)
    echo "Format unknown, use fdisk manually."
    ;;

  esac
}

usage_exit()
{
  case $1 in

  format)
    echo "Usage: initial-setup format separate /dev/hdd [unionfs_size_MB]"
    ;;
  configure)
    echo "Usage: initial-setup configure /dev/hdd"
    ;;
  *)
    echo "Usage: initial-setup format|configure|status"
    ;;

  esac

  exit 1
}

# main

case $1 in

format)
  case $2 in

  separate)
    if [ -z "$3" ]; then
      usage_exit $1
    fi
    SIZE="$4"
    if [ -z "$SIZE" ]; then
      SIZE="256"
    fi
    format_separate "$3" "$SIZE"
    ;;

  combined)
    echo "initial-setup: \"format combined\" is no longer supported."
    usage_exit $1
    ;;

  *)
    usage_exit $1
    ;;

  esac
  echo "Format successful."
  exit $GREEN
  ;;

configure)
  if [ -z "$2" ]; then
    usage_exit $1
  fi
  configure "$2"
  echo "Configure successful."
  exit $GREEN
  ;;

status)
  status
  ;;

*)
  usage_exit
  ;;

esac

