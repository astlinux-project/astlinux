#!/bin/sh

# The first runlevel script to execute.
# Use to upgrade the firewall and other *safe* file edits.

. /etc/rc.conf

add_system_default_users()
{
  local base="$1" user file IFS

  unset IFS
  for user in zabbix prosody ldap kamailio ntp avahi; do
    for file in passwd shadow group; do
      if ! grep -q "^${user}:" "/etc/${file}"; then
        grep "^${user}:" "${base}/etc/${file}" >> "/etc/${file}"
        echo "FIRSTRUN: Added system default '${user}' user/group to '/etc/${file}'"
      fi
    done
  done
}

update_system_default_users()
{
  local base="$1" user file current IFS

  unset IFS
  for user in root nobody; do
    for file in passwd group; do
      current="$(grep "^${user}:" "${base}/etc/${file}")"
      if [ -n "$current" -a "$current" != "$(grep "^${user}:" "/etc/${file}")" ]; then
        sed -i -e "s|^${user}:.*$|${current}|" "/etc/${file}"
        echo "FIRSTRUN: Updated system default '${user}' user/group in '/etc/${file}'"
      fi
    done
  done
}

init () {
  local new old=""

  new="$(cat /etc/astlinux-release)"

  if [ -f /mnt/kd/astlinux-release ]; then
    old="$(cat /mnt/kd/astlinux-release)"
  fi

  echo -n "FIRSTRUN..."

  if [ "$old" != "$new" ]; then
    echo "  version change detected."

    cp -p /etc/astlinux-release /mnt/kd/astlinux-release

    # Upgrade AIF firewall supporting files
    if /usr/sbin/upgrade-arno-firewall checkMajor; then  # Don't auto-upgrade if a major version change
      /usr/sbin/upgrade-arno-firewall upgrade
    fi

    # Update system default user/group files to ASTURW files
    if [ -d /oldroot/mnt/asturo ]; then
      add_system_default_users /oldroot/mnt/asturo
      update_system_default_users /oldroot/mnt/asturo
    elif [ -d /oldroot/image ]; then
      add_system_default_users /oldroot/image
      update_system_default_users /oldroot/image
    fi

    case $old in
      astlinux-1.0.*)
        # 1.0.x -> Current upgrade scripts
        ;;
    esac

  else
    echo "  no version change."
  fi
}

start () {
  :
}

stop () {
  :
}

if [ "$FIRSTRUN" = "no" ]; then
  echo "FIRSTRUN is disabled" >&2
  exit
fi

if [ ! -d /mnt/kd/rc.conf.d -a ! -f /mnt/kd/rc.conf ]; then
  # No config files, not installed yet
  exit
fi

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

